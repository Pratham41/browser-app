{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { userLoginReducer, checkAlreadyLoggedInReducer, getUserDataReducer } from './redux/reducers/user';\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  checkLogin: checkAlreadyLoggedInReducer,\n  getUserDetails: getUserDataReducer\n});\nconst userInfoFromStorage = sessionStorage.getItem('userInfo') ? JSON.parse(sessionStorage.getItem('userInfo')) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/media/pratham/Pratham/TrestleLabs/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userLoginReducer","checkAlreadyLoggedInReducer","getUserDataReducer","reducer","userLogin","checkLogin","getUserDetails","userInfoFromStorage","sessionStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,gBADF,EAEEC,2BAFF,EAGEC,kBAHF,QAIO,uBAJP;AAMA,MAAMC,OAAO,GAAGP,eAAe,CAAC;AAC9BQ,EAAAA,SAAS,EAAEJ,gBADmB;AAE9BK,EAAAA,UAAU,EAAEJ,2BAFkB;AAG9BK,EAAAA,cAAc,EAAEJ;AAHc,CAAD,CAA/B;AAMA,MAAMK,mBAAmB,GAAGC,cAAc,CAACC,OAAf,CAAuB,UAAvB,IACxBC,IAAI,CAACC,KAAL,CAAWH,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMG,YAAY,GAAG;AACnBR,EAAAA,SAAS,EAAE;AAAES,IAAAA,QAAQ,EAAEN;AAAZ;AADQ,CAArB;AAIA,MAAMO,UAAU,GAAG,CAAChB,KAAD,CAAnB;AAEA,MAAMiB,KAAK,GAAGpB,WAAW,CACvBQ,OADuB,EAEvBS,YAFuB,EAGvBb,mBAAmB,CAACF,eAAe,CAAC,GAAGiB,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport {\n  userLoginReducer,\n  checkAlreadyLoggedInReducer,\n  getUserDataReducer,\n} from './redux/reducers/user';\n\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  checkLogin: checkAlreadyLoggedInReducer,\n  getUserDetails: getUserDataReducer,\n});\n\nconst userInfoFromStorage = sessionStorage.getItem('userInfo')\n  ? JSON.parse(sessionStorage.getItem('userInfo'))\n  : null;\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}