{"ast":null,"code":"var _jsxFileName = \"/media/pratham/Pratham/TrestleLabs/frontend/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './bootstrap.min.css';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { logout } from './redux/actions/user';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InitialRender = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const history = useHistory();\n  document.addEventListener('visibilitychange', event => {\n    if (userInfo === null || userInfo === void 0 ? void 0 : userInfo.isLoggedIn) {\n      if (document.visibilityState === 'visible') {\n        console.log('debugger');\n        debugger;\n        const Y = window.confirm('already login index continue in this tab ?');\n\n        if (Y === false) {\n          userInfo && dispatch(logout(userInfo.email));\n        } else {}\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(InitialRender, \"hag0UQr9vt4XPBgMIB1qzAfO+Js=\", false, function () {\n  return [useDispatch, useSelector, useHistory];\n});\n\n_c = InitialRender;\nexport default InitialRender;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: [/*#__PURE__*/_jsxDEV(InitialRender, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 38,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c;\n\n$RefreshReg$(_c, \"InitialRender\");","map":{"version":3,"sources":["/media/pratham/Pratham/TrestleLabs/frontend/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","Provider","store","logout","useDispatch","useSelector","useHistory","InitialRender","dispatch","userLogin","state","userInfo","history","document","addEventListener","event","isLoggedIn","visibilityState","console","log","Y","window","confirm","email","render","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAO,qBAAP;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,SAAS,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACD,SAAlB,CAA7B;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAeF,SAArB;AACA,QAAMG,OAAO,GAAGN,UAAU,EAA1B;AACAO,EAAAA,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA+CC,KAAD,IAAW;AACvD,QAAIJ,QAAJ,aAAIA,QAAJ,uBAAIA,QAAQ,CAAEK,UAAd,EAA0B;AACxB,UAAIH,QAAQ,CAACI,eAAT,KAA6B,SAAjC,EAA4C;AAC1CC,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA;AACA,cAAMC,CAAC,GAAGC,MAAM,CAACC,OAAP,CAAe,4CAAf,CAAV;;AAEA,YAAIF,CAAC,KAAK,KAAV,EAAiB;AACfT,UAAAA,QAAQ,IAAIH,QAAQ,CAACL,MAAM,CAACQ,QAAQ,CAACY,KAAV,CAAP,CAApB;AACD,SAFD,MAEO,CACN;AACF;AACF;AACF,GAbD;AAcA,sBAAO,qCAAP;AACD,CApBD;;GAAMhB,a;UACaH,W,EACCC,W,EAEFC,U;;;KAJZC,a;AAsBN,eAAeA,aAAf;AAEAT,QAAQ,CAAC0B,MAAT,eACE,QAAC,QAAD;AAAU,EAAA,KAAK,EAAEtB,KAAjB;AAAA,0BACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,UADF,eAEE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,UAFF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAKEW,QAAQ,CAACY,cAAT,CAAwB,MAAxB,CALF,E,CAQA;AACA;AACA;;AACAzB,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './bootstrap.min.css';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { logout } from './redux/actions/user';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nconst InitialRender = () => {\n  const dispatch = useDispatch();\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n  const history = useHistory();\n  document.addEventListener('visibilitychange', (event) => {\n    if (userInfo?.isLoggedIn) {\n      if (document.visibilityState === 'visible') {\n        console.log('debugger');\n        debugger;\n        const Y = window.confirm('already login index continue in this tab ?');\n\n        if (Y === false) {\n          userInfo && dispatch(logout(userInfo.email));\n        } else {\n        }\n      }\n    }\n  });\n  return <></>;\n};\n\nexport default InitialRender;\n\nReactDOM.render(\n  <Provider store={store}>\n    <InitialRender />\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}