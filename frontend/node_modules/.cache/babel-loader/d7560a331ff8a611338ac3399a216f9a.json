{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react'; // User has switched back to the tab\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst onFocus = () => {\n  console.log('Tab is in focus');\n}; // User has switched away from the tab (AKA tab is hidden)\n\n\nconst onBlur = () => {\n  console.log('Tab is blurred');\n};\n\nconst onLoadstart = () => {\n  console.log('Tab is onloadstart');\n};\n\nconst WindowFocusHandler = () => {\n  _s();\n\n  useEffect(() => {\n    window.addEventListener('onloadstart', onLoadstart);\n    window.addEventListener('focus', onFocus);\n    window.addEventListener('blur', onBlur); // Specify how to clean up after this effect:\n\n    return () => {\n      window.removeEventListener('focus', onFocus);\n      window.removeEventListener('blur', onBlur);\n      window.removeEventListener('onloadstart', onLoadstart);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(WindowFocusHandler, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = WindowFocusHandler;\nexport default WindowFocusHandler;\n\nvar _c;\n\n$RefreshReg$(_c, \"WindowFocusHandler\");","map":{"version":3,"sources":["/media/pratham/Pratham/TrestleLabs/frontend/src/screens/WindowFocusHandler.jsx"],"names":["React","useEffect","onFocus","console","log","onBlur","onLoadstart","WindowFocusHandler","window","addEventListener","removeEventListener"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;;;;AACA,MAAMC,OAAO,GAAG,MAAM;AACpBC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD,CAFD,C,CAIA;;;AACA,MAAMC,MAAM,GAAG,MAAM;AACnBF,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD,CAFD;;AAIA,MAAME,WAAW,GAAG,MAAM;AACxBH,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD,CAFD;;AAIA,MAAMG,kBAAkB,GAAG,MAAM;AAAA;;AAC/BN,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,MAAM,CAACC,gBAAP,CAAwB,aAAxB,EAAuCH,WAAvC;AACAE,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiCP,OAAjC;AACAM,IAAAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgCJ,MAAhC,EAHc,CAId;;AACA,WAAO,MAAM;AACXG,MAAAA,MAAM,CAACE,mBAAP,CAA2B,OAA3B,EAAoCR,OAApC;AACAM,MAAAA,MAAM,CAACE,mBAAP,CAA2B,MAA3B,EAAmCL,MAAnC;AACAG,MAAAA,MAAM,CAACE,mBAAP,CAA2B,aAA3B,EAA0CJ,WAA1C;AACD,KAJD;AAKD,GAVQ,CAAT;AAYA,sBAAO,qCAAP;AACD,CAdD;;GAAMC,kB;;KAAAA,kB;AAgBN,eAAeA,kBAAf","sourcesContent":["import React, { useEffect } from 'react';\n\n// User has switched back to the tab\nconst onFocus = () => {\n  console.log('Tab is in focus');\n};\n\n// User has switched away from the tab (AKA tab is hidden)\nconst onBlur = () => {\n  console.log('Tab is blurred');\n};\n\nconst onLoadstart = () => {\n  console.log('Tab is onloadstart');\n};\n\nconst WindowFocusHandler = () => {\n  useEffect(() => {\n    window.addEventListener('onloadstart', onLoadstart);\n    window.addEventListener('focus', onFocus);\n    window.addEventListener('blur', onBlur);\n    // Specify how to clean up after this effect:\n    return () => {\n      window.removeEventListener('focus', onFocus);\n      window.removeEventListener('blur', onBlur);\n      window.removeEventListener('onloadstart', onLoadstart);\n    };\n  });\n\n  return <></>;\n};\n\nexport default WindowFocusHandler;\n"]},"metadata":{},"sourceType":"module"}