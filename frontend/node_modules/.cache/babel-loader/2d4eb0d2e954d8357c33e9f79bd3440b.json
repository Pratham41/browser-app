{"ast":null,"code":"var _jsxFileName = \"/media/pratham/Pratham/TrestleLabs/frontend/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './bootstrap.min.css';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { logout } from './redux/actions/user';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InitialRender = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  document.addEventListener('visibilitychange', event => {\n    if (document.visibilityState === 'visible') {\n      const Y = window.confirm('already login index continue in this tab ?');\n      console.log('debugger');\n      debugger;\n\n      if (!Y) {\n        debugger;\n        dispatch(logout());\n        history.push('/');\n      } else {\n        history.push('/dashboard'); // window.confirm('tab is active');\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(InitialRender, \"FxNkVwM1QRg2/kU3+RDi4ll7EAM=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = InitialRender;\nexport default InitialRender;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: [/*#__PURE__*/_jsxDEV(InitialRender, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 38,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c;\n\n$RefreshReg$(_c, \"InitialRender\");","map":{"version":3,"sources":["/media/pratham/Pratham/TrestleLabs/frontend/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","Provider","store","logout","useDispatch","useSelector","useHistory","InitialRender","dispatch","history","document","addEventListener","event","visibilityState","Y","window","confirm","console","log","push","render","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAO,qBAAP;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,OAAO,GAAGH,UAAU,EAA1B;AACAI,EAAAA,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA+CC,KAAD,IAAW;AACvD,QAAIF,QAAQ,CAACG,eAAT,KAA6B,SAAjC,EAA4C;AAC1C,YAAMC,CAAC,GAAGC,MAAM,CAACC,OAAP,CAAe,4CAAf,CAAV;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA;;AACA,UAAI,CAACJ,CAAL,EAAQ;AACN;AACAN,QAAAA,QAAQ,CAACL,MAAM,EAAP,CAAR;AAEAM,QAAAA,OAAO,CAACU,IAAR,CAAa,GAAb;AACD,OALD,MAKO;AACLV,QAAAA,OAAO,CAACU,IAAR,CAAa,YAAb,EADK,CAEL;AACD;AACF;AACF,GAfD;AAgBA,sBAAO,qCAAP;AACD,CApBD;;GAAMZ,a;UACaH,W,EACDE,U;;;KAFZC,a;AAsBN,eAAeA,aAAf;AAEAT,QAAQ,CAACsB,MAAT,eACE,QAAC,QAAD;AAAU,EAAA,KAAK,EAAElB,KAAjB;AAAA,0BACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,UADF,eAEE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,UAFF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAKEQ,QAAQ,CAACW,cAAT,CAAwB,MAAxB,CALF,E,CAQA;AACA;AACA;;AACArB,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './bootstrap.min.css';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { logout } from './redux/actions/user';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nconst InitialRender = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  document.addEventListener('visibilitychange', (event) => {\n    if (document.visibilityState === 'visible') {\n      const Y = window.confirm('already login index continue in this tab ?');\n      console.log('debugger');\n      debugger;\n      if (!Y) {\n        debugger;\n        dispatch(logout());\n\n        history.push('/');\n      } else {\n        history.push('/dashboard');\n        // window.confirm('tab is active');\n      }\n    }\n  });\n  return <></>;\n};\n\nexport default InitialRender;\n\nReactDOM.render(\n  <Provider store={store}>\n    <InitialRender />\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}