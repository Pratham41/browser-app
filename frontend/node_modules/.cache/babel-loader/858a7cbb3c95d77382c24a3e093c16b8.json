{"ast":null,"code":"import _regeneratorRuntime from\"/media/pratham/Pratham/TrestleLabs/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/media/pratham/Pratham/TrestleLabs/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useEffect}from'react';import{Container}from'react-bootstrap';import GoogleLogin from'react-google-login';import{login,logout}from'../redux/actions/user';import{useDispatch,useSelector}from'react-redux';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LoginScreen=function LoginScreen(_ref){var location=_ref.location,history=_ref.history;var dispatch=useDispatch();var userLogin=useSelector(function(state){return state.userLogin;});var userInfo=userLogin.userInfo;useEffect(function(){if(!userInfo){history.push('/');}else{if(userInfo.isLoggedIn){var Y=window.confirm('already login continue in this tab ?');if(Y){history.push('/dashboard');}else{dispatch(logout(userInfo.email));history.push('/');}}}},[history,userInfo,dispatch]);var handleSuccessLogin=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(response){var _response$profileObj,name,email,imageUrl,config,_yield$axios$post,data,Y;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_response$profileObj=response.profileObj,name=_response$profileObj.name,email=_response$profileObj.email,imageUrl=_response$profileObj.imageUrl;config={headers:{'Content-Type':'application/json'}};_context.next=4;return axios.post('http://localhost:5000/user/getuser',{email:email,config:config});case 4:_yield$axios$post=_context.sent;data=_yield$axios$post.data;if(data.isLoggedIn){Y=window.confirm('already login continue in this tab ?');if(Y){console.log('data');console.log(data);debugger;dispatch(login(data.name,data.email,data.imageUrl));history.push('/dashboard');}else{history.push('/');}}else{dispatch(login(name,email,imageUrl));}case 7:case\"end\":return _context.stop();}}},_callee);}));return function handleSuccessLogin(_x){return _ref2.apply(this,arguments);};}();var handleFailLogin=function handleFailLogin(response){console.log(response);};return/*#__PURE__*/_jsx(Container,{className:\"text-center my-5 py-5 \",children:/*#__PURE__*/_jsxs(Container,{className:\"text-center my-5 py-5 shadow bg-light\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-success\",children:\"Sign in Here\"}),/*#__PURE__*/_jsx(GoogleLogin,{className:\"mt-2 text-center\",clientId:\"329337993518-7u332kcuq9agn3h1nec249froda0bqp3.apps.googleusercontent.com\",buttonText:\"Log in with Google\",onSuccess:handleSuccessLogin,onFailure:handleFailLogin,cookiePolicy:'single_host_origin',theme:\"dark\"})]})});};export default LoginScreen;","map":{"version":3,"sources":["/media/pratham/Pratham/TrestleLabs/frontend/src/screens/LoginScreen.jsx"],"names":["React","useEffect","Container","GoogleLogin","login","logout","useDispatch","useSelector","axios","LoginScreen","location","history","dispatch","userLogin","state","userInfo","push","isLoggedIn","Y","window","confirm","email","handleSuccessLogin","response","profileObj","name","imageUrl","config","headers","post","data","console","log","handleFailLogin"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport GoogleLogin from 'react-google-login';\nimport { login, logout } from '../redux/actions/user';\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\n\nconst LoginScreen = ({ location, history }) => {\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/');\n    } else {\n      if (userInfo.isLoggedIn) {\n        const Y = window.confirm('already login continue in this tab ?');\n        if (Y) {\n          history.push('/dashboard');\n        } else {\n          dispatch(logout(userInfo.email));\n          history.push('/');\n        }\n      }\n    }\n  }, [history, userInfo, dispatch]);\n\n  const handleSuccessLogin = async (response) => {\n    const { name, email, imageUrl } = response.profileObj;\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    const { data } = await axios.post('http://localhost:5000/user/getuser', {\n      email,\n      config,\n    });\n\n    if (data.isLoggedIn) {\n      const Y = window.confirm('already login continue in this tab ?');\n      if (Y) {\n        console.log('data');\n        console.log(data);\n\n        debugger;\n        dispatch(login(data.name, data.email, data.imageUrl));\n        history.push('/dashboard');\n      } else {\n        history.push('/');\n      }\n    } else {\n      dispatch(login(name, email, imageUrl));\n    }\n  };\n\n  const handleFailLogin = (response) => {\n    console.log(response);\n  };\n\n  return (\n    <Container className=\"text-center my-5 py-5 \">\n      <Container className=\"text-center my-5 py-5 shadow bg-light\">\n        <h1 className=\"text-success\">Sign in Here</h1>\n\n        <GoogleLogin\n          className=\"mt-2 text-center\"\n          clientId=\"329337993518-7u332kcuq9agn3h1nec249froda0bqp3.apps.googleusercontent.com\"\n          buttonText=\"Log in with Google\"\n          onSuccess={handleSuccessLogin}\n          onFailure={handleFailLogin}\n          cookiePolicy={'single_host_origin'}\n          theme=\"dark\"\n        />\n      </Container>\n    </Container>\n  );\n};\n\nexport default LoginScreen;\n"]},"metadata":{},"sourceType":"module"}