{"ast":null,"code":"import axios from 'axios';\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT } from '../constants/user';\nexport const login = (name, email, imageUrl) => async dispatch => {\n  let webcount = 0;\n\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('http://localhost:5000/user/login', {\n      name,\n      email,\n      imageUrl\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    sessionStorage.setItem('userInfo', JSON.stringify(data)); // sessionStorage.setItem('webcount', JSON.stringify(webcount + 1));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  sessionStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n};","map":{"version":3,"sources":["/media/pratham/Pratham/TrestleLabs/frontend/src/redux/actions/user.js"],"names":["axios","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","login","name","email","imageUrl","dispatch","webcount","type","config","headers","data","post","payload","sessionStorage","setItem","JSON","stringify","error","response","message","logout","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,kBADF,EAEEC,kBAFF,EAGEC,eAHF,EAIEC,WAJF,QAKO,mBALP;AAOA,OAAO,MAAMC,KAAK,GAAG,CAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,KAA2B,MAAOC,QAAP,IAAoB;AAClE,MAAIC,QAAQ,GAAG,CAAf;;AACA,MAAI;AACFD,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEV;AADC,KAAD,CAAR;AAIA,UAAMW,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;AAMA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMd,KAAK,CAACe,IAAN,CACrB,kCADqB,EAErB;AAAET,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,KAFqB,EAGrBI,MAHqB,CAAvB;AAMAH,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAET,kBADC;AAEPc,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAKAG,IAAAA,cAAc,CAACC,OAAf,CAAuB,UAAvB,EAAmCC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAnC,EAtBE,CAwBF;AACD,GAzBD,CAyBE,OAAOO,KAAP,EAAc;AACdZ,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAER,eADC;AAEPa,MAAAA,OAAO,EACLK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CApCM;AAsCP,OAAO,MAAMC,MAAM,GAAG,MAAOf,QAAD,IAAc;AACxCQ,EAAAA,cAAc,CAACQ,UAAf,CAA0B,UAA1B;AACAhB,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEP;AAAR,GAAD,CAAR;AACD,CAHM","sourcesContent":["import axios from 'axios';\nimport {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n} from '../constants/user';\n\nexport const login = (name, email, imageUrl) => async (dispatch) => {\n  let webcount = 0;\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      'http://localhost:5000/user/login',\n      { name, email, imageUrl },\n      config\n    );\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    sessionStorage.setItem('userInfo', JSON.stringify(data));\n\n    // sessionStorage.setItem('webcount', JSON.stringify(webcount + 1));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  sessionStorage.removeItem('userInfo');\n  dispatch({ type: USER_LOGOUT });\n};\n"]},"metadata":{},"sourceType":"module"}