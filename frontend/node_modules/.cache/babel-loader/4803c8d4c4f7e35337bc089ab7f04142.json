{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, CHECK_LOGGED_IN_REQUEST, CHECK_LOGGED_IN_SUCCESS, CHECK_LOGGED_IN_FAIL, USERINFO_REQUEST, USERINFO_SUCCESS, USERINFO_FAIL } from '../constants/user';\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return {\n        loading: true\n      };\n\n    case USER_LOGIN_SUCCESS:\n      return {\n        loading: false,\n        userInfo: action.payload\n      };\n\n    case USER_LOGIN_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case USER_LOGOUT:\n      return {};\n\n    default:\n      return state;\n  }\n};\nexport const checkAlreadyLoggedInReducer = (state = {}, action) => {\n  switch (action.type) {\n    case CHECK_LOGGED_IN_REQUEST:\n      return {\n        loading: true\n      };\n\n    case CHECK_LOGGED_IN_SUCCESS:\n      return {\n        loading: false,\n        userLoggedIn: action.payload\n      };\n\n    case CHECK_LOGGED_IN_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const getUserInfoReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USERINFO_REQUEST:\n      return {\n        loading: true\n      };\n\n    case USERINFO_SUCCESS:\n      return {\n        loading: false,\n        userData: action.payload\n      };\n\n    case USERINFO_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/media/pratham/Pratham/TrestleLabs/frontend/src/redux/reducers/user.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","CHECK_LOGGED_IN_REQUEST","CHECK_LOGGED_IN_SUCCESS","CHECK_LOGGED_IN_FAIL","USERINFO_REQUEST","USERINFO_SUCCESS","USERINFO_FAIL","userLoginReducer","state","action","type","loading","userInfo","payload","error","checkAlreadyLoggedInReducer","userLoggedIn","getUserInfoReducer","userData"],"mappings":"AAAA,SACEA,kBADF,EAEEC,kBAFF,EAGEC,eAHF,EAIEC,WAJF,EAKEC,uBALF,EAMEC,uBANF,EAOEC,oBAPF,EAQEC,gBARF,EASEC,gBATF,EAUEC,aAVF,QAWO,mBAXP;AAaA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACtD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,kBAAL;AACE,aAAO;AAAEc,QAAAA,OAAO,EAAE;AAAX,OAAP;;AACF,SAAKb,kBAAL;AACE,aAAO;AAAEa,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,QAAQ,EAAEH,MAAM,CAACI;AAAnC,OAAP;;AACF,SAAKd,eAAL;AACE,aAAO;AAAEY,QAAAA,OAAO,EAAE,KAAX;AAAkBG,QAAAA,KAAK,EAAEL,MAAM,CAACI;AAAhC,OAAP;;AACF,SAAKb,WAAL;AACE,aAAO,EAAP;;AACF;AACE,aAAOQ,KAAP;AAVJ;AAYD,CAbM;AAeP,OAAO,MAAMO,2BAA2B,GAAG,CAACP,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACjE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,uBAAL;AACE,aAAO;AAAEU,QAAAA,OAAO,EAAE;AAAX,OAAP;;AACF,SAAKT,uBAAL;AACE,aAAO;AAAES,QAAAA,OAAO,EAAE,KAAX;AAAkBK,QAAAA,YAAY,EAAEP,MAAM,CAACI;AAAvC,OAAP;;AACF,SAAKV,oBAAL;AACE,aAAO;AAAEQ,QAAAA,OAAO,EAAE,KAAX;AAAkBG,QAAAA,KAAK,EAAEL,MAAM,CAACI;AAAhC,OAAP;;AAEF;AACE,aAAOL,KAAP;AATJ;AAWD,CAZM;AAcP,OAAO,MAAMS,kBAAkB,GAAG,CAACT,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACxD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,gBAAL;AACE,aAAO;AAAEO,QAAAA,OAAO,EAAE;AAAX,OAAP;;AACF,SAAKN,gBAAL;AACE,aAAO;AAAEM,QAAAA,OAAO,EAAE,KAAX;AAAkBO,QAAAA,QAAQ,EAAET,MAAM,CAACI;AAAnC,OAAP;;AACF,SAAKP,aAAL;AACE,aAAO;AAAEK,QAAAA,OAAO,EAAE,KAAX;AAAkBG,QAAAA,KAAK,EAAEL,MAAM,CAACI;AAAhC,OAAP;;AAEF;AACE,aAAOL,KAAP;AATJ;AAWD,CAZM","sourcesContent":["import {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  CHECK_LOGGED_IN_REQUEST,\n  CHECK_LOGGED_IN_SUCCESS,\n  CHECK_LOGGED_IN_FAIL,\n  USERINFO_REQUEST,\n  USERINFO_SUCCESS,\n  USERINFO_FAIL,\n} from '../constants/user';\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true };\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_LOGOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const checkAlreadyLoggedInReducer = (state = {}, action) => {\n  switch (action.type) {\n    case CHECK_LOGGED_IN_REQUEST:\n      return { loading: true };\n    case CHECK_LOGGED_IN_SUCCESS:\n      return { loading: false, userLoggedIn: action.payload };\n    case CHECK_LOGGED_IN_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const getUserInfoReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USERINFO_REQUEST:\n      return { loading: true };\n    case USERINFO_SUCCESS:\n      return { loading: false, userData: action.payload };\n    case USERINFO_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}