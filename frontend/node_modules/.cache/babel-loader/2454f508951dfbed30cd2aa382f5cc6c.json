{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { userLoginReducer, checkAlreadyLoggedInReducer } from './redux/reducers/user';\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  checkLogin: checkAlreadyLoggedInReducer\n});\nconst userInfoFromStorage = sessionStorage.getItem('userInfo') ? JSON.parse(sessionStorage.getItem('userInfo')) : null;\nconst webcount = sessionStorage.getItem('webcount') ? JSON.parse(sessionStorage.getItem('webcount')) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage,\n    webcount: webcount\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/media/pratham/Pratham/TrestleLabs/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userLoginReducer","checkAlreadyLoggedInReducer","reducer","userLogin","checkLogin","userInfoFromStorage","sessionStorage","getItem","JSON","parse","webcount","initialState","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,gBADF,EAEEC,2BAFF,QAGO,uBAHP;AAKA,MAAMC,OAAO,GAAGN,eAAe,CAAC;AAC9BO,EAAAA,SAAS,EAAEH,gBADmB;AAE9BI,EAAAA,UAAU,EAAEH;AAFkB,CAAD,CAA/B;AAKA,MAAMI,mBAAmB,GAAGC,cAAc,CAACC,OAAf,CAAuB,UAAvB,IACxBC,IAAI,CAACC,KAAL,CAAWH,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMG,QAAQ,GAAGJ,cAAc,CAACC,OAAf,CAAuB,UAAvB,IACbC,IAAI,CAACC,KAAL,CAAWH,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAX,CADa,GAEb,IAFJ;AAIA,MAAMI,YAAY,GAAG;AACnBR,EAAAA,SAAS,EAAE;AAAES,IAAAA,QAAQ,EAAEP,mBAAZ;AAAiCK,IAAAA,QAAQ,EAAEA;AAA3C;AADQ,CAArB;AAIA,MAAMG,UAAU,GAAG,CAACf,KAAD,CAAnB;AAEA,MAAMgB,KAAK,GAAGnB,WAAW,CACvBO,OADuB,EAEvBS,YAFuB,EAGvBZ,mBAAmB,CAACF,eAAe,CAAC,GAAGgB,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport {\n  userLoginReducer,\n  checkAlreadyLoggedInReducer,\n} from './redux/reducers/user';\n\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  checkLogin: checkAlreadyLoggedInReducer,\n});\n\nconst userInfoFromStorage = sessionStorage.getItem('userInfo')\n  ? JSON.parse(sessionStorage.getItem('userInfo'))\n  : null;\n\nconst webcount = sessionStorage.getItem('webcount')\n  ? JSON.parse(sessionStorage.getItem('webcount'))\n  : null;\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage, webcount: webcount },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}